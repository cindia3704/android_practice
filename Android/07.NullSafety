

Null Safety
--> Null 에 대해서 안전하다
--> 코틀린의 특징

Null VS 0
-> 0: 휴지를 다 쓰고, 휴지심만 남은 상태
-> Null: 휴지심도 없는 상태, 존재하지 않는 상태, 모르는 상태

Null이 안전하지 않은 이유
-> 0+10 = 10
-> null + 10 = ?            <-- 에러
-> button.setOnClickListener
-> null.setOnClickListener  <-- 에러
==> NullPointExceptionError 발생한다


null 을 처리해줘야함!
예)
if (number !=null){
    number+10
   }

if (button!=null){
    button.setOnClickListener
    }

코틀린이 Null Safety 하기 위해서 사용하는 문법:
    - ?         : Null이 아니라면 이하 구문 실행
    - !!        : Null이 아님을 개발자가 보장한다

사용 방법 :
- button?.setOnClickListener <-- ? 앞에 있는게 Null이 아니라면, 뒤를 실행하겠다
- button!!.setOnClickListener   <-- 100% 확신할때만 사용 (사용하지 않는걸 권장)


Null 이 될수 있는 타임
Int, Double, Float, Class ==> Null이 될 수 없는 타입
Int?, Double?, Float?,Class? ==> Null이 될 수 있는 타입
